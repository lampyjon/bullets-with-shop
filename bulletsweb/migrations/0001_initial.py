# Generated by Django 2.1.1 on 2018-09-20 20:38

import autoslug.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_id', models.CharField(max_length=30, verbose_name='Strava ID')),
                ('activity_type', models.CharField(choices=[('run', 'Run'), ('ride', 'Ride')], default='ride', max_length=4, verbose_name='Type')),
                ('distance', models.PositiveIntegerField(verbose_name='Distance')),
                ('start_date', models.DateTimeField(verbose_name='Activity Date')),
            ],
        ),
        migrations.CreateModel(
            name='Bullet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('email', models.EmailField(max_length=200, verbose_name='email address')),
                ('date_added', models.DateField(auto_now_add=True, verbose_name='date created')),
                ('email_checked', models.DateField(blank=True, null=True, verbose_name='date email confirmed')),
                ('email_check_ref', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='random uuid for email confirmation')),
                ('postcode', models.CharField(max_length=5, verbose_name='first part of postcode')),
                ('contact_no', models.CharField(max_length=100, verbose_name='contact number')),
                ('over_18', models.BooleanField(help_text='Please confirm that you are over 18?', verbose_name='over 18')),
                ('get_emails', models.BooleanField(help_text='Can we contact you regarding Collective events?', verbose_name='happy to receive emails')),
                ('voting_ref', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, verbose_name='random uuid for voting')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BulletEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Event Date')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='Event Name')),
                ('link', models.URLField(blank=True, help_text='If you put a web address in here then we add a link to the events page', null=True, verbose_name='Link to more info')),
                ('running_event', models.BooleanField(default=False, verbose_name='Running Event')),
                ('cycling_event', models.BooleanField(default=False, verbose_name='Cycling Event')),
                ('social_event', models.BooleanField(default=False, verbose_name='Social Event')),
            ],
        ),
        migrations.CreateModel(
            name='FredLeaderBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strava_activity_id', models.CharField(max_length=50, verbose_name='Strava Activity ID')),
                ('distance', models.PositiveIntegerField(verbose_name='Distance')),
                ('elevation', models.FloatField(verbose_name='Elevation')),
                ('start_date', models.DateTimeField(verbose_name='Activity Date')),
                ('ratio', models.FloatField(verbose_name='elevation per mile')),
            ],
        ),
        migrations.CreateModel(
            name='FredRider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('email', models.EmailField(max_length=200, verbose_name='email address')),
                ('date_added', models.DateField(auto_now_add=True, verbose_name='date created')),
                ('email_checked', models.DateField(blank=True, null=True, verbose_name='date email confirmed')),
                ('email_check_ref', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='random uuid for email confirmation')),
                ('access_token', models.CharField(max_length=500, verbose_name='Strava access token')),
                ('checked_upto_date', models.DateTimeField(blank=True, null=True, verbose_name='Checked up to')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('extra_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='extra title text (not in link)')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title')),
                ('redirect_to', models.URLField(blank=True, help_text="If you put a website address in here, then don't include a story below; the news story will just redirect to this link", null=True, verbose_name='redirection story - where to go?')),
                ('story', models.TextField(blank=True, null=True, verbose_name='story')),
                ('date_added', models.DateField(auto_now_add=True, verbose_name='date added')),
                ('display_after', models.DateField(default=datetime.date.today, verbose_name='publish on')),
                ('display_until', models.DateField(blank=True, null=True, verbose_name='remove from site on')),
                ('front_page', models.BooleanField(default=False, verbose_name='feature on front page')),
            ],
            options={
                'verbose_name': 'news story',
                'verbose_name_plural': 'news stories',
            },
        ),
        migrations.CreateModel(
            name='RunningEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Run Date')),
                ('session_type', models.CharField(blank=True, max_length=200, verbose_name='Session type')),
                ('session_details', models.CharField(max_length=200, verbose_name='Session details')),
                ('meeting_point', models.CharField(choices=[('h', 'Harvester'), ('b', 'Boldmere Gate'), ('r', 'Blackroot Bistro')], default='h', max_length=1, verbose_name='Meeting point')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='SquareRide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strava_id', models.CharField(max_length=20, verbose_name='Strava Activity ID')),
                ('name', models.CharField(max_length=500, verbose_name='Ride Name')),
                ('polyline', models.TextField(verbose_name='Polyline')),
            ],
        ),
        migrations.CreateModel(
            name='SquareRider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rider_id', models.CharField(max_length=20, verbose_name='Strava Rider ID')),
                ('access_token', models.CharField(max_length=500, verbose_name='Strava access token')),
            ],
        ),
        migrations.CreateModel(
            name='FredHighLeaderBoard',
            fields=[
                ('fredleaderboard_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bulletsweb.FredLeaderBoard')),
            ],
            options={
                'ordering': ['-elevation'],
            },
            bases=('bulletsweb.fredleaderboard',),
        ),
        migrations.CreateModel(
            name='FredLowLeaderBoard',
            fields=[
                ('fredleaderboard_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bulletsweb.FredLeaderBoard')),
            ],
            options={
                'ordering': ['ratio'],
            },
            bases=('bulletsweb.fredleaderboard',),
        ),
        migrations.AddField(
            model_name='squareride',
            name='rider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bulletsweb.SquareRider'),
        ),
        migrations.AddField(
            model_name='fredleaderboard',
            name='rider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bulletsweb.FredRider'),
        ),
    ]
